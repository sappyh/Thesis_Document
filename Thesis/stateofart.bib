
@inproceedings{schmid_experimental_2007,
	title = {An experimental study of network performance impact of increased latency in software defined radios},
	isbn = {978-1-59593-738-4},
	url = {http://portal.acm.org/citation.cfm?doid=1287767.1287779},
	doi = {10.1145/1287767.1287779},
	abstract = {Software Defined Radios are becoming more and more prevalent. Especially in the radio amateur community, Software Defined Radios are a big success. The wireless industry also has considerable interest in the dynamic reconfigurability and other advantages of Software Defined Radios. Our research focuses on the latency of Software Defined Radios and its impact on throughput in modern wireless protocols. Software Defined Radio systems often employ a bus system to transfer the samples from a radio frontend to the processor which introduces a non-negligible latency. Additionally, the signal processing calculations on general-purpose processors introduce additional latencies that are not found on conventional radios. This work concentrates on one particular Software Defined Radio system called GNU Radio, an open source Software Defined Radio application, and one of its hardware components, the Universal Software Radio Peripheral (USRP), and analyzes its receive and transmit latencies. We will use these measurements to characterize the performance impact on IEEE 802.15.4 implementation in GNU Radio. Additionally, we present two Software Defined Radio implementations of short-range radio standards, a FSK scheme used in the Chipcon CC1000 radio, and the physical layer of IEEE 802.15.4. We use these implementations for round trip time measurements and introduce two sample applications, a physical layer bridge between the FSK scheme and IEEE 802.15.4, and a dual channel receiver that receives two radio channels concurrently.},
	language = {en},
	urldate = {2018-07-31},
	publisher = {ACM Press},
	author = {Schmid, Thomas and Sekkat, Oussama and Srivastava, Mani B.},
	year = {2007},
	pages = {59},
	file = {Schmid et al. - 2007 - An experimental study of network performance impac.pdf:/home/saptarshi/Documents/MasterThesis@RISE/Documents/Schmid et al. - 2007 - An experimental study of network performance impac.pdf:application/pdf}
}

@misc{noauthor_internet_2017,
	type = {{SectionStartPage}},
	title = {Internet of {Things} outlook – {Ericsson}},
	copyright = {https://www.ericsson.com/en/legal},
	url = {https://www.ericsson.com/en/mobility-report/reports/november-2017/internet-of-things-outlook},
	abstract = {In 2023, there will be 20 billion connected devices related to the IoT. Learn more about the Internet of Things outlook with the Ericsson Mobility Report.},
	language = {en},
	urldate = {2018-08-01},
	journal = {Ericsson.com},
	month = nov,
	year = {2017},
	file = {Snapshot:/home/saptarshi/Zotero/storage/TAEB7FMB/internet-of-things-outlook.html:text/html}
}

@misc{noauthor_limesdr_nodate,
	title = {{LimeSDR}},
	url = {https://myriadrf.org/projects/limesdr/},
	abstract = {LimeSDR is a low cost, open source, apps-enabled software defined radio (SDR) platform that can be used to support just about any type of wireless communication standard; it can transmit and receive UMTS, LTE, GSM, LoRa, Bluetooth, Zigbee, RFID, and Digital Broadcasting, to name but a few.},
	language = {en-GB},
	urldate = {2018-08-01},
	journal = {Myriad},
	file = {Snapshot:/home/saptarshi/Zotero/storage/AUCEM3RD/limesdr.html:text/html}
}

@article{nychis_enabling_nodate,
	title = {Enabling {MAC} {Protocol} {Implementations} on {Software}-{Defined} {Radios}},
	abstract = {Over the past few years a range of new Media Access Control (MAC) protocols have been proposed for wireless networks. This research has been driven by the observation that a single one-size-fits-all MAC protocol cannot meet the needs of diverse wireless deployments and applications. Unfortunately, most MAC functionality has traditionally been implemented on the wireless card for performance reasons, thus, limiting the opportunities for MAC customization. Software-defined radios (SDRs) promise unprecedented flexibility, but their architecture has proven to be a challenge for MAC protocols.},
	language = {en},
	author = {Nychis, George and Hottelier, Thibaud},
	pages = {23},
	file = {Nychis and Hottelier - Enabling MAC Protocol Implementations on Software-.pdf:/home/saptarshi/Documents/MasterThesis@RISE/Documents/Nychis and Hottelier - Enabling MAC Protocol Implementations on Software-.pdf:application/pdf}
}

@article{noauthor_ieee_2016,
	title = {{IEEE} {Standard} for {Low}-{Rate} {Wireless} {Networks}},
	doi = {10.1109/IEEESTD.2016.7460875},
	abstract = {The protocol and compatible interconnection for data communication devices using low-data-rate, low-power, and low-complexity short-range radio frequency (RF) transmissions in a wireless personal area network (WPAN) are defined in this standard. A variety of physical layers (PHYs) have been defined that cover a wide variety of frequency bands.},
	journal = {IEEE Std 802.15.4-2015 (Revision of IEEE Std 802.15.4-2011)},
	month = apr,
	year = {2016},
	keywords = {ad hoc network, compatible interconnection, data communication, data communication devices, Data transmission, IEEE 802.15.4-2011 Revision, IEEE 802.15.4-2015, IEEE 802.15.4(TM), IEEE standard, IEEE standards, IEEE Standards, low data rate, low power, Low power electronics, low-rate wireless personal area networks, LR-WPAN, Mobile communication, mobility, PAN, personal area network, personal area networks, Personal area networks, physical layers, protocol, protocols, radio frequency, RF, short range, Short range communications, short-range radio frequency transmissions, wireless, wireless personal area network, Wireless personal area networks, WPAN},
	pages = {1--709},
	file = {IEEE Xplore Abstract Record:/home/saptarshi/Zotero/storage/GGA6QJ3X/7460875.html:text/html}
}

@misc{noauthor_warp_nodate,
	title = {{WARP} {Project}},
	url = {https://warpproject.org/trac},
	urldate = {2018-08-02},
	file = {WARP Project:/home/saptarshi/Zotero/storage/FZ6XU78U/trac.html:text/html}
}

@misc{noauthor_all_nodate,
	title = {All {About} {Direct} {Digital} {Synthesis} {\textbar} {Analog} {Devices}},
	url = {http://www.analog.com/en/analog-dialogue/articles/all-about-direct-digital-synthesis.html},
	urldate = {2018-08-19},
	file = {All About Direct Digital Synthesis | Analog Devices:/home/saptarshi/Zotero/storage/RYMDPIVV/all-about-direct-digital-synthesis.html:text/html}
}

@article{risset_introduction_nodate,
	title = {Introduction to {GNU} {Radio}},
	language = {en},
	author = {Risset, Tanguy},
	pages = {66},
	file = {Risset - Introduction to GNU Radio.pdf:/home/saptarshi/Zotero/storage/RQNIC66G/Risset - Introduction to GNU Radio.pdf:application/pdf}
}

@article{corgan_gnu_2015,
	title = {{GNU} {Radio} {Runtime} {Operation}},
	language = {en},
	author = {Corgan, Johnathan},
	year = {2015},
	pages = {12},
	file = {Corgan - 2015 - GNU Radio Runtime Operation.pdf:/home/saptarshi/Zotero/storage/KC4MLE3E/Corgan - 2015 - GNU Radio Runtime Operation.pdf:application/pdf}
}

@misc{noauthor_signals_nodate,
	title = {Signals \& {Slots} {\textbar} {Qt} 4.8},
	url = {https://doc.qt.io/archives/qt-4.8/signalsandslots.html},
	urldate = {2018-08-20},
	file = {Signals & Slots | Qt 4.8:/home/saptarshi/Zotero/storage/MPEWXFIU/signalsandslots.html:text/html}
}

@misc{noauthor_limemicro:lms7002m_nodate,
	title = {{LimeMicro}:{LMS}7002M {Datasheet} - {Myriad}-{RF} {Wiki}},
	url = {https://wiki.myriadrf.org/LimeMicro:LMS7002M_Datasheet},
	urldate = {2018-08-23},
	file = {LimeMicro\:LMS7002M Datasheet - Myriad-RF Wiki:/home/saptarshi/Zotero/storage/2W484PXL/LimeMicroLMS7002M_Datasheet.html:text/html}
}

@inproceedings{truong_investigating_2013,
	title = {Investigating {Latency} in {GNU} {Software} {Radio} with {USRP} {Embedded} {Series} {SDR} {Platform}},
	doi = {10.1109/BWCCA.2013.11},
	abstract = {Software-Defined Radio (SDR) is a radio technology that most of conventional radio components are implemented in software. Besides the advantages like re-configurability and flexibility, a SDR system has to face a critical challenge on real-time processing due to high jitter and latency. Thus, understanding latency in SDR systems is very important. This paper focuses on investigating the latency of a popular SDR platform - GNU Software Radio with a new Universal Software Radio Peripherals (USRP) device -USRP Embedded Series E100. This research investigates and analyzes the reasons of the delays by considering all the buffering mechanisms in the platform. After that, we verify and quantify them by using three experimental methods. The first method is to calculate the whole delay of the SDR system by measuring the round-trip time (RTT). The second method measures subparts of the whole latency by using timestamp during a packet transmission process. The third approach is designated to measure the latency of the hardware part and bus communication part. We believe this study offers the better understanding of the latency in a new embedded USRP series - USRP E100 with GNU Software Radio platform.},
	booktitle = {2013 {Eighth} {International} {Conference} on {Broadband} and {Wireless} {Computing}, {Communication} and {Applications}},
	author = {Truong, N. B. and Yu, C.},
	month = oct,
	year = {2013},
	keywords = {buffering mechanisms, bus communication part, Delay, Delays, Digital signal processing, E100, embedded systems, Field programmable gate arrays, GNU Radio, GNU software radio, Hardware, jitter, latency, Latency, Linux, packet transmission process, radio components, radio technology, real-time processing, round-trip time, SDR, Software, Software Defined Radio, software radio, Software radio, software-defined radio, universal software radio peripherals device, USRP, USRP Embedded Series E100, USRP embedded series SDR platform},
	pages = {9--14},
	file = {IEEE Xplore Abstract Record:/home/saptarshi/Zotero/storage/994I2QSP/6690857.html:text/html;IEEE Xplore Full Text PDF:/home/saptarshi/Zotero/storage/TB9HDYU4/Truong and Yu - 2013 - Investigating Latency in GNU Software Radio with U.pdf:application/pdf}
}

@inproceedings{puschmann_implementation_2011,
	address = {Barcelona, Spain},
	title = {Implementation and evaluation of a practical {SDR} testbed},
	isbn = {978-1-4503-0912-7},
	url = {http://dl.acm.org/citation.cfm?doid=2093256.2093271},
	doi = {10.1145/2093256.2093271},
	abstract = {Software deﬁned radios provide a perfect playground for researchers to experiment with current and future wireless communication systems. However, the beneﬁts, especially for communication protocols, largely depend on non-functional requirements (i.e. temporal behavior) that have to be met by the system architecture. In this paper, we share our experience with a ﬂexible SDR framework named Iris. We present an implementation of a Send-and-Wait Automatic Repeat reQuest (ARQ) protocol as well as a virtual network driver component which, in conjunction with Iris, form the core of our software deﬁned radio networking testbed. To verify the practical suitability of the testbed and to evaluate the performance of the protocol, we are conducting end-toend throughput and delay benchmarks.},
	language = {en},
	urldate = {2018-09-14},
	booktitle = {Proceedings of the 4th {International} {Conference} on {Cognitive} {Radio} and {Advanced} {Spectrum} {Management} - {CogART} '11},
	publisher = {ACM Press},
	author = {Puschmann, André and Kalil, Mohamed A. and Mitschele-Thiel, Andreas},
	year = {2011},
	pages = {1--5},
	file = {Puschmann et al. - 2011 - Implementation and evaluation of a practical SDR t.pdf:/home/saptarshi/Zotero/storage/SETC5BDD/Puschmann et al. - 2011 - Implementation and evaluation of a practical SDR t.pdf:application/pdf}
}